package com.aitworks.creditcard.viakliks;
import java.io.BufferedReader;
import java.io.File;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.StreamCorruptedException;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLConnection;
import java.util.Enumeration;
import java.util.Hashtable;
import java.util.Properties;
import javax.servlet.jsp.JspWriter;
import javax.servlet.ServletRequest;
import javax.servlet.jsp.tagext.TagSupport;
import javax.servlet.http.HttpServlet;
import javax.servlet.Servlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.ServletException;
import java.security.*;
/**
 * <code>ViaKlixFieldReference</code>
 * <p>
 * This class returns deals with viaklix field values.
 * </p>
 * @author  Booker Northington II
 * @version 1.0
 * @since   1.3
 * @param none <code>none</code> none.
 * @return none <code>none</code> none.
 */
//---------------------------------------------------------------------------
public class ViaKlix extends TagSupport{  
//---------------------------------------------------------------------------
    //*************************************************************************** 
    //Class Constructors
    //*************************************************************************** 
   /**
    * <code>ViaKlixFieldReference</code>
    * <p>
    * Class Constructor
    * </p>
    * @author  Booker Northington II
    * @version 1.0
    * @since   1.3
    * @param none <code>none</code> none.
    * @return <code>none</code> none
    */
    public ViaKlix(){ 
    }// ViaKlixFieldReference() Constructor ENDS 

    //*************************************************************************** 
    //Public Methods
    //*************************************************************************** 
    /** 
    * method doStartTag() 
    * @parm none 
    * @return 1 if operation was successful 
    * This method responds to the stat tag event generated by the jsp. 
    */ 
    public int doStartTag(){ 
       //String filename="properties"+File.separator+"viaklix.properties";
        //processInputStream(ViaKlix.class.getResourceAsStream(filename));
        
        try{
            clientPage=pageContext.getOut(); 
            request=pageContext.getRequest(); 
        //    initializeViaKlixColumns();
            //talkToClient("*************InitializedViaKlixColumns<br>");
            createTheMessageToSendToViaKlix(); 
            //talkToClient("*************createdTheMessageToSend<br>");
            sendTheMessageToViaKlix();                   
            //talkToClient("*************Sending message<br>");
        }
        catch(MalformedURLException e){System.out.println(e);}
        catch(IOException e){}
        catch(ClassNotFoundException e){}
                pageContext.setAttribute(getId(),this); 
        return 1; 
    }// doStartTag() ENDS 

    /**
    // required accessors
    public String getSsl_merchant_id(){
       return ssl_merchant_id;
    }
    public String getSsl_pin(){
        return ssl_pin;
    }
    public String getSsl_amount(){
        return ssl_amount;
    }
    
    
    public String getId(){
        return id;
    }//getId() ENDS
    
    public String getSsl_test_mode(){
        return ssl_test_mode;
    }//getSsl_test_mode() ENDS
    
    public String getSsl_transaction_type(){
        return ssl_transaction_type;
    }//getSsl_transaction_type() ENDS
       
    public String getSsl_card_number(){
        return ssl_card_number;
    }//getSsl_card_number() ENDS
    
    public String getSsl_exp_date(){
        return ssl_exp_date;
    }//getSsl_exp_date() ENDS
    
    public String getSsl_description(){
        return ssl_description;
    }//getSsl_description() ENDS
    
    public String getSsl_first_name(){
        return ssl_first_name;
    }//getSsl_first_name() ENDS
    
    public String getSsl_last_name(){
        return ssl_last_name;
    }//getSsl_last_name() ENDS
    
    public String getSsl_address1(){
        return ssl_address1;
    }//getSsl_address1() ENDS
    
    public String getSsl_address2(){
        return ssl_address2;
    }//getSsl_address2() ENDS
    
    public String getSsl_city(){
        return ssl_city;
    }//getSsl_city() ENDS
    
    public String getSsl_state(){
        return ssl_state;
    }//getSsl_state() ENDS
    
    public String getSsl_zip(){
        return ssl_zip;
    }//getSsl_zip() ENDS
    
    public String getSsl_country(){
        return ssl_country;
    }//getSsl_country() ENDS
    
    public String getSsl_phone(){
        return ssl_phone;
    }//getSsl_phone() ENDS
    
    public String getSsl_email(){
        return ssl_email;
    }//getSsl_email() ENDS
    
    public String getSsl_avs_address(){
        return ssl_avs_address;
    }//getSsl_avs_address() ENDS
    
    public String getSsl_avs_zip(){
        return ssl_avs_zip;
    }//getSsl_avs_zip() ENDS
    
    public String getSsl_avs_response(){
        return ssl_avs_response;
    }//getSsl_avs_response() ENDS
    
    public String getSsl_show_form(){
        return ssl_show_form;
    }//getSsl_show_form() ENDS
    
    public String getSsl_header_html(){
        return ssl_header_html;
    }//getSsl_header_html() ENDS
    
    public String getSsl_footer_html(){
        return ssl_footer_html;
    }//getSsl_footer_html() ENDS
    
    public String getSsl_(){
        return ssl_;
    }//getSsl_() ENDS
    
    public String getSsl_result(){
        return ssl_result;
    }//getSsl_result() ENDS
    
    public String getSsl_result_message(){
        return ssl_result_message;
    }//getSsl_result_message() ENDS
    
    public String getSsl_txt_id(){
        return ssl_txt_id;
    }//getSsl_txt_id() ENDS
    
    public String getSsl_approval_code(){
        return ssl_approval_code;
    }//getSsl_approval_code() ENDS
    
    public String getSsl_result_format(){
        return ssl_result_format;
    }//getSsl_result_format() ENDS
    
    public String getSsl_receipt_header_html(){
        return ssl_receipt_header_html;
    }//getSsl_receipt_header_html() ENDS
    
    public String getSsl_receipt_footer_html(){
        return ssl_receipt_footer_html;
    }//getSsl_receipt_footer_html() ENDS
    
    public String getSsl_receipt_link_method(){
        return ssl_receipt_link_method;
    }//getSsl_receipt_link_method() ENDS
    
    public String getSsl_receipt_link_url(){
        return ssl_receipt_link_url;
    }//getSsl_receipt_link_url() ENDS
    
    public String getSsl_receipt_link_text(){
        return ssl_receipt_link_text;
    }//getSsl_receipt_link_text() ENDS
    
    public String getSsl_email_header(){
        return ssl_email_header;
    }//getSsl_email_header() ENDS
    
    public String getSsl_email_footer(){
        return ssl_email_footer;
    }//getSsl_email_footer() ENDS
    
    public String getSsl_do_customer_email(){
        return ssl_do_customer_email;
    }//getSsl_do_customer_email() ENDS
    
    public String getSsl_do_merchant_email(){
        return ssl_do_merchant_email;
    }//getSsl_do_merchant_email() ENDS
    
    public String getSsl_merchant_email(){
        return ssl_merchant_email;
    }//getSsl_merchant_email() ENDS
    
    public String getSsl_header_color(){
        return ssl_header_color;
    }//getSsl_header_color() ENDS
    
    public String getSsl_text_color(){
        return ssl_text_color;
    }//getSsl_text_color() ENDS
    
    public String getSsl_background_color(){
        return ssl_background_color;
    }//getSsl_background_color() ENDS
    
    public String getSsl_table_color(){
        return ssl_table_color;
    }//getSsl_table_color() ENDS
    
    public String getSsl_cvv2(){
        return ssl_cvv2;
    }//getSsl_cvv2() ENDS
    
    public String getSsl_cvv2cvc2(){    
        return ssl_cvv2cvc2;
    }//getSsl_cvv2cvc2() ENDS
    
  **/
    public String getParameter(String key){
        return(String)responseHashtable.get(key);
    }//getParameter() ENDS

    public String getId(){
        return(this.id);
    }
    
    public String getSsl_result() {
        return(getParameter("ssl_result"));
    }//getSsl_result() ENDS
    
    public static void main(String[] args){
        ViaKlix viaKlix=new ViaKlix();
        viaKlix.doStartTag();
    }//main() ENDS

   
    //Required fields
    public void setId(String id){
        columnsHashtable.put("id",id);
        this.id=id;
    }
    public void setSsl_merchant_id(String ssl_merchant_id){
        columnsHashtable.put("ssl_merchant_id",ssl_merchant_id);
        requiredColumns.put("ssl_merchant_id",ssl_merchant_id);
    }
    public void setSsl_pin(String ssl_pin){
        columnsHashtable.put("ssl_pin",ssl_pin);
        requiredColumns.put("ssl_pin",ssl_pin);
    }
    public void setSsl_amount(String ssl_amount){
        columnsHashtable.put("ssl_amount",ssl_amount);
        requiredColumns.put("ssl_amount",ssl_amount);
    }
    public void setSsl_salestax(String ssl_salestax){
        columnsHashtable.put("ssl_salestax",ssl_salestax);
        requiredColumns.put("ssl_salestax",ssl_salestax);
    }

    //optional fields
    public void setSsl_test_mode(String ssl_test_mode){
        columnsHashtable.put("ssl_test_mode",ssl_test_mode);
    }//setSsl_test_mode() ENDS
    
    public void setSsl_transaction_type(String ssl_transaction_type){
        columnsHashtable.put("ssl_transaction_type",ssl_transaction_type);
    }//setSsl_transaction_type() ENDS
       
    public void setSsl_card_number(String ssl_card_number){
        columnsHashtable.put("ssl_card_number",ssl_card_number);
    }//setSsl_card_number() ENDS
    
    public void setSsl_exp_date(String ssl_exp_date){
        columnsHashtable.put("ssl_exp_date",ssl_exp_date);
    }//setSsl_exp_date() ENDS
    
    public void setSsl_description(String ssl_description){
        columnsHashtable.put("ssl_description",ssl_description);
    }//setSsl_description() ENDS
    
    public void setSsl_first_name(String ssl_first_name){
        columnsHashtable.put("ssl_first_name",ssl_first_name);
    }//setSsl_first_name() ENDS
    
    public void setSsl_last_name(String ssl_last_name){
        columnsHashtable.put("ssl_last_name",ssl_last_name);
    }//setSsl_last_name() ENDS
    
    public void setSsl_address1(String ssl_address1){
        columnsHashtable.put("ssl_address1",ssl_address1);
    }//setSsl_address1() ENDS
    
    public void setSsl_address2(String ssl_address2){
        columnsHashtable.put("ssl_address2",ssl_address2);
    }//setSsl_address2() ENDS
    
    public void setSsl_city(String ssl_city){
        columnsHashtable.put("ssl_city",ssl_city);
    }//setSsl_city() ENDS
    
    public void setSsl_state(String ssl_state){
        columnsHashtable.put("ssl_state",ssl_state);
    }//setSsl_state() ENDS
    
    public void setSsl_zip(String ssl_zip){
        columnsHashtable.put("ssl_zip",ssl_zip);
    }//setSsl_zip() ENDS
    
    public void setSsl_country(String ssl_country){
        columnsHashtable.put("ssl_country",ssl_country);
    }//setSsl_country() ENDS
    
    public void setSsl_phone(String ssl_phone){
        columnsHashtable.put("ssl_phone",ssl_phone);
    }//setSsl_phone() ENDS
    
    public void setSsl_email(String ssl_email){
        columnsHashtable.put("ssl_email",ssl_email);
    }//setSsl_email() ENDS
    
    public void setSsl_avs_address(String ssl_avs_address){
        columnsHashtable.put("ssl_avs_address",ssl_avs_address);
    }//setSsl_avs_address() ENDS
    
    public void setSsl_avs_zip(String ssl_avs_zip){
        columnsHashtable.put("ssl_avs_zip",ssl_avs_zip);
    }//setSsl_avs_zip() ENDS
    
    public void setSsl_avs_response(String ssl_avs_response){
        columnsHashtable.put("ssl_avs_response",ssl_avs_response);
    }//setSsl_avs_response() ENDS
    
    public void setSsl_show_form(String ssl_show_form){
        columnsHashtable.put("ssl_show_form",ssl_show_form);
    }//setSsl_show_form() ENDS
    
    public void setSsl_header_html(String ssl_header_html){
        columnsHashtable.put("ssl_header_html",ssl_header_html);
    }//setSsl_header_html() ENDS
    
    public void setSsl_footer_html(String ssl_footer_html){
        columnsHashtable.put("ssl_footer_html",ssl_footer_html);
    }//setSsl_footer_html() ENDS
    
    public void setSsl_(String ssl_){
        columnsHashtable.put("ssl_",ssl_);
    }//setSsl_() ENDS
    
    public void setSsl_result(String ssl_result){
        columnsHashtable.put("ssl_result",ssl_result);
    }//setSsl_result() ENDS
    
    public void setSsl_result_message(String ssl_result_message){
        columnsHashtable.put("ssl_result_message",ssl_result_message);
    }//setSsl_result_message() ENDS
    
    public void setSsl_txt_id(String ssl_txt_id){
        columnsHashtable.put("ssl_txt_id",ssl_txt_id);
    }//setSsl_txt_id() ENDS
    
    public void setSsl_approval_code(String ssl_approval_code){
        columnsHashtable.put("ssl_approval_code",ssl_approval_code);
    }//setSsl_approval_code() ENDS
    
    public void setSsl_result_format(String ssl_result_format){
        columnsHashtable.put("ssl_result_format",ssl_result_format);
    }//setSsl_result_format() ENDS
    
    public void setSsl_receipt_header_html(String ssl_receipt_header_html){
        columnsHashtable.put("ssl_receipt_header_html",ssl_receipt_header_html);
    }//setSsl_receipt_header_html() ENDS
    
    public void setSsl_receipt_footer_html(String ssl_receipt_footer_html){
        columnsHashtable.put("ssl_receipt_footer_html",ssl_receipt_footer_html);
    }//setSsl_receipt_footer_html() ENDS
    
    public void setSsl_receipt_link_method(String ssl_receipt_link_method){
        columnsHashtable.put("ssl_receipt_link_method",ssl_receipt_link_method);
    }//setSsl_receipt_link_method() ENDS
    
    public void setSsl_receipt_link_url(String ssl_receipt_link_url){
        columnsHashtable.put("ssl_receipt_link_url",ssl_receipt_link_url);
    }//setSsl_receipt_link_url() ENDS
    
    public void setSsl_receipt_link_text(String ssl_receipt_link_text){
        columnsHashtable.put("ssl_receipt_link_text",ssl_receipt_link_text);
    }//setSsl_receipt_link_text() ENDS
    
    public void setSsl_email_header(String ssl_email_header){
        columnsHashtable.put("ssl_email_header",ssl_email_header);
    }//setSsl_email_header() ENDS
    
    public void setSsl_email_footer(String ssl_email_footer){
        columnsHashtable.put("ssl_email_footer",ssl_email_footer);
    }//setSsl_email_footer() ENDS
    
    public void setSsl_do_customer_email(String ssl_do_customer_email){
        columnsHashtable.put("ssl_do_customer_email",ssl_do_customer_email);
    }//setSsl_do_customer_email() ENDS
    
    public void setSsl_do_merchant_email(String ssl_do_merchant_email){
        columnsHashtable.put("ssl_do_merchant_email",ssl_do_merchant_email);
    }//setSsl_do_merchant_email() ENDS
    
    public void setSsl_merchant_email(String ssl_merchant_email){
        columnsHashtable.put("ssl_merchant_email",ssl_merchant_email);
    }//setSsl_merchant_email() ENDS
    
    public void setSsl_header_color(String ssl_header_color){
        columnsHashtable.put("ssl_header_color",ssl_header_color);
    }//setSsl_header_color() ENDS
    
    public void setSsl_text_color(String ssl_text_color){
        columnsHashtable.put("ssl_text_color",ssl_text_color);
    }//setSsl_text_color() ENDS
    
    public void setSsl_background_color(String ssl_background_color){
        columnsHashtable.put("ssl_background_color",ssl_background_color);
    }//setSsl_background_color() ENDS
    
    public void setSsl_table_color(String ssl_table_color){
        columnsHashtable.put("ssl_table_color",ssl_table_color);
    }//setSsl_table_color() ENDS
    
    public void setSsl_cvv2(String ssl_cvv2){
        columnsHashtable.put("ssl_cvv2",ssl_cvv2);
    }//setSsl_cvv2() ENDS
    
    public void setSsl_cvv2cvc2(String ssl_cvv2cvc2){    
        columnsHashtable.put("ssl_cvv2cvc2",ssl_cvv2cvc2);
    }//setSsl_cvv2cvc2() ENDS
    
    public void setShowForm(String show){
        if(!show.toLowerCase().equals("true")||
           !show.toLowerCase().equals("false"))
           show="false";
        
        columnsHashtable.put("ssl_show_form",show.toLowerCase());
    }//setShowForm() ENDS
    
    public void setResultFormat(String format){
        if(format.toUpperCase().equals("HTML"))
            columnsHashtable.put("ssl_result_format","HTML");
        else if(format.toUpperCase().equals("ASCII"))
            columnsHashtable.put("ssl_result_format","ASCII");
        else
           columnsHashtable.put("ssl_result_format","ASCII");
    }//setResultFormat() ENDS

    //*************************************************************************** 
    //Private Methods
    //*************************************************************************** 
    /** 
    * This method sets the parameters read from the form. 
    * @param none 
    * @return none 
    */ 
    private void createTheMessageToSendToViaKlix(){ 
        urlBuffer=new StringBuffer();
        //urlBuffer.append("<html><BODY> <FORM METHOD=\"post\">\n"); 
        Enumeration enum=columnsHashtable.keys();
        
        String delimitor="";
        for(;enum.hasMoreElements();){       
            String key=(String)enum.nextElement();
            String value=(String)columnsHashtable.get(key);
            requiredColumns.put(key,value);
            //urlBuffer.append("<input type=\"hidden\" ");
            //urlBuffer.append("name=\""+key+"\" ");
            //urlBuffer.append("value=\""+value+"\" >\n");
            urlBuffer.append(delimitor+key+"="+value);
            delimitor="&";

        }
         //urlBuffer.append("</form></body></html>\n"); 
//talkToClient("*******SENDING<br>"+urlBuffer.toString()+"<br>*******DoneSending<br>");
    }//createTheMessageToSendToViaKlix() 
    
    private boolean haveRequirementsBeenMeet(){  
        boolean requirementsMet=false;
        boolean temp1=requiredColumns.containsKey("ssl_merchant_id");       
        boolean temp2=requiredColumns.containsKey("ssl_pin");       
        boolean temp3=requiredColumns.containsKey("ssl_amount");       
 
 //talkToClient("ssl_merchant_id="+temp1+"<br>");
 //talkToClient("ssl_pin="+temp2+"<br>");
 //talkToClient("ssl_amount="+temp3+"<br>");
 
        if(temp1&&temp2&&temp3)
            requirementsMet=true;
        
        return requirementsMet;
    }//haveRequirementsBeenMeet() END
    
    private void processInputStream(InputStream stream){
        try { 
            if (stream==null)
                System.err.println("properties file not found.");
            else{
                properties=new Properties();
                properties.load (stream);
                Enumeration enum=properties.propertyNames();
                
                for(;enum.hasMoreElements();){
                    String key=(String)enum.nextElement();   
                    String value=properties.getProperty(key);
                    System.out.println(key+"="+value);
                }
            }
        } 
        catch (IOException exception){ 
            System.err.println("Unable to read properties file"); 
            exception.printStackTrace(); 
        }        
    }//processInputStream() ENDS
    
    private void initializeViaKlixColumns(){
       columnsHashtable.put("ssl_test_mode","");
       columnsHashtable.put("ssl_transaction_type","");
       columnsHashtable.put("ssl_merchant_id","");
       columnsHashtable.put("ssl_pin","");
       columnsHashtable.put("ssl_amount","");
       columnsHashtable.put("ssl_card_number","");
       columnsHashtable.put("ssl_exp_date","");
       columnsHashtable.put("ssl_description","");
       columnsHashtable.put("ssl_first_name","");
       columnsHashtable.put("ssl_last_name","");
       columnsHashtable.put("ssl_address1","");
       columnsHashtable.put("ssl_address2","");
       columnsHashtable.put("ssl_city","");
       columnsHashtable.put("ssl_state","");
       columnsHashtable.put("ssl_zip","");
       columnsHashtable.put("ssl_country","");
       columnsHashtable.put("ssl_phone","");
       columnsHashtable.put("ssl_email","");
       columnsHashtable.put("ssl_avs_address","");
       columnsHashtable.put("ssl_avs_zip","");
       columnsHashtable.put("ssl_avs_response","");
       columnsHashtable.put("ssl_email","");
       columnsHashtable.put("ssl_show_form","false");
       columnsHashtable.put("ssl_header_html","");
       columnsHashtable.put("ssl_footer_html","");
       columnsHashtable.put("ssl_","");
       columnsHashtable.put("ssl_result","");
       columnsHashtable.put("ssl_result_message","");
       columnsHashtable.put("ssl_txt_id","");
       columnsHashtable.put("ssl_approval_code","");
       columnsHashtable.put("ssl_result_format","ASCII");
       columnsHashtable.put("ssl_receipt_header_html","");
       columnsHashtable.put("ssl_receipt_footer_html","");
       columnsHashtable.put("ssl_receipt_link_method","");
       columnsHashtable.put("ssl_receipt_link_url","");
       columnsHashtable.put("ssl_receipt_link_text","");
       columnsHashtable.put("ssl_email_header","");
       columnsHashtable.put("ssl_email_footer","");
       columnsHashtable.put("ssl_do_customer_email","");
       columnsHashtable.put("ssl_do_merchant_email","");
       columnsHashtable.put("ssl_merchant_email","");
       columnsHashtable.put("ssl_header_color","");
       columnsHashtable.put("ssl_text_color","");
       columnsHashtable.put("ssl_background_color","");
       columnsHashtable.put("ssl_table_color","");
       columnsHashtable.put("ssl_cvv2","");
       columnsHashtable.put("ssl_cvv2cvc2","");    
    }//initializeViaKlixColumns() ENDS
    

    private void parseResponseData(String data){
        if(data!=null){
            int endOfKey=data.indexOf("=");
            
            if(endOfKey!=-1){
                String key=data.substring(0,endOfKey);
                String value=data.substring((endOfKey+1),data.length());
                responseHashtable.put(key,value);
 talkToClient("responseHashtable: "+key+"="+value+"<br>");   
            }
        }
    }//parseResponseData() ENDS
     
    private void talkToClient(String message){
        try{
            clientPage.println(message+"<br>");
        }
        catch(IOException e){
            e.printStackTrace();
        }
    }
    private boolean sendTheMessageToViaKlix()throws MalformedURLException,
            IOException,StreamCorruptedException,ClassNotFoundException{ 
        boolean returnValue=false;
        Security.addProvider(new com.sun.net.ssl.internal.ssl.Provider());
        	System.setProperty("java.protocol.handler.pkgs",
                            "com.sun.net.ssl.internal.www.protocol");
        if(haveRequirementsBeenMeet()){
            returnValue=true;
            responseHashtable=new Hashtable();
            String showForm=(String)columnsHashtable.get("ssl_show_form");
            URL url=new URL(hostName); 
            URLConnection urlConnection=url.openConnection(); 
            urlConnection.setDoOutput(true);  
//talkToClient("Sending "+urlBuffer.toString());
            java.io.OutputStream outputStream=urlConnection.getOutputStream();
            PrintWriter outp=new PrintWriter(outputStream); 
            outp.println(urlBuffer.toString()); 
            outp.close(); 

            BufferedReader in=new BufferedReader(
                new InputStreamReader(urlConnection.getInputStream())); 

            StringBuffer data=new StringBuffer(); 
            String temp; 

            while((temp=in.readLine()) != null){
                parseResponseData(temp);
                data.append(temp); 
            }
//talkToClient("Receiving "+data.toString());
System.out.println("Receiving "+data.toString());

            in.close();  
            /*
            if(showForm.toLowerCase().equals("false")){
                StringBuffer answer=new StringBuffer(); 
                answer.append("<html><BODY text=\"white\" bgcolor=\"#141ee6\">"); 
                answer.append("<center><h2>Response From ViaKlix</h2></center>"); 
                //answer.append("<FORM METHOD=\"post\" ACTION=\"authorizeNet.jsp\">"); 
                answer.append("<FORM METHOD=\"post\">"); 
                answer.append("<center>\n"); 
                
                Enumeration enum=responseHashtable.keys();
                for(;enum.hasMoreElements();){
                    String key=(String)enum.nextElement();
                    answer.append((String)responseHashtable.get(key)+"\n"); 
                }
                 
                answer.append("</center></form></body></html>"); 
               clientPage.println(answer.toString()); 
            }
             */
        }
        
        return returnValue;
    }// sendTheMessageToViaKlix() ENDS 
    
    //***************************************************************************
    // Class Variables
    //***************************************************************************
    //transaction data
    private JspWriter clientPage; 
    private StringBuffer columnsToSendToViaKlix;
    private Hashtable columnsHashtable=new Hashtable();
    private String id;
    private Hashtable requiredColumns=new Hashtable();
 //private   String hostName="https://secure.authorize.net/gateway/transact.dll"; 
    private String hostName="https://www.viaklix.com/process.asp"; 
    private Properties properties;
    private ServletRequest request; 
    private HttpServletResponse response;
    private Hashtable responseHashtable;
    /*
    private String ssl_amount;
    private String ssl_merchant_id;
    private String ssl_pin;
    private String ssl_test_mode;
    private String ssl_transaction_type;
    private String ssl_card_number;
    private String ssl_exp_date;
    private String ssl_description;
    private String ssl_first_name;
    private String ssl_last_name;
    private String ssl_address1;
    private String ssl_address2;
    private String ssl_city;
    private String ssl_state;
    private String ssl_zip;
    private String ssl_country;
    private String ssl_phone;
    private String ssl_email;
    private String ssl_avs_address;
    private String ssl_avs_zip;
    private String ssl_avs_response;
    private String ssl_show_form;
    private String ssl_header_html;
    private String ssl_footer_html;
    private String ssl_;
    private String ssl_result;
    private String ssl_result_message;
    private String ssl_txt_id;
    private String ssl_approval_code;
    private String ssl_result_format;
    private String ssl_receipt_header_html;
    private String ssl_receipt_footer_html;
    private String ssl_receipt_link_method;
    private String ssl_receipt_link_url;
    private String ssl_receipt_link_text;
    private String ssl_email_header;
    private String ssl_email_footer;
    private String ssl_do_customer_email;
    private String ssl_do_merchant_email;
    private String ssl_merchant_email;
    private String ssl_header_color;
    private String ssl_text_color;
    private String ssl_background_color;
    private String ssl_table_color;
    private String ssl_cvv2;
    private String ssl_cvv2cvc2;    
     */
    private StringBuffer urlBuffer;
}//ViaKlix() ENDS
